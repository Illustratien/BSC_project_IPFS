---
title: "Week4: column and row operations in dataframe"
author: "Tien-Cheng"
categories: [R-basic]

toc-location: right
number-sections: true
website: 
  sidebar:
    search: true
format:
  html: 
    grid:
      sidebar-width: 300px
      body-width: 900px
      margin-width: 300px
      gutter-width: 1.5rem

reference-location: margin
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(magrittr);suppressWarnings(library(dplyr));
suppressWarnings(library(ggplot2));library(tidyr);
library(kableExtra);library(knitr);library(purrr)
options(dplyr.summarise.inform = FALSE)
```

Welcome to the fourth course! You will learn `dataframe` wrangling:

::: callout-note
# Learning goals

1.  data frame wrangling with `dplyr` and `tidyr`
:::

## more mutate examples

Create a dataframe

```{r}
df <- expand.grid(x=letters[1:4],
                  y=1:2)
```

### combine columns

`paste`, `interaction` , `unite` Compare the results

```{r,eval=FALSE}
df%>% mutate(paste(x,y))
df%>% mutate(z=paste(x,y))
df%>% mutate(z=paste(x,y,sep = "-"))
df %>% tidyr::unite(data = .,col = "z",c(x,y))
df <- df %>% mutate(z=interaction(x,y))
```

### add columns

```{r,eval=FALSE}
# add identifier based on row numbers
df %>% mutate(id=1:n())
df %>% mutate(id=1:nrow(.))
# row names
rownames(df)
rownames(df) <- LETTERS[1:nrow(df)]
rownames(df)
```

#### practice

subset the row where (x equals to "a", y equals to 1) or (x equals to "c", y equals to 2)

1.  How many ways to achieve this? you can use `dplyr::filter` or `[]`.
2.  Observe the row names, are they the same before and after subseting?

::: {.callout-warning collapse="true"}
# answer
```{r,eval=FALSE,collapse=T}
df %>% filter(z%in%c("a.1","c.2"))
df %>% filter((x=="a"&y==1)|(x=="c"&y==2))
df %>% .[rownames(.)%in%c("A","G"),]
df %>% with(.,.[(x=="a"&y==1)|(x=="c"&y==2),])
```
:::
