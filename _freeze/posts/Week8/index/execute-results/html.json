{
  "hash": "4a03ee351248696fb23889cc3c442e87",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Week8: Loops\"\nauthor: \"Tien-Cheng\"\ncategories: [R-intermediate]\n\ntoc-location: right\nnumber-sections: true\nwebsite: \n  sidebar:\n    search: true\nformat:\n  html: \n    grid:\n      # sidebar-width: 300px\n      # body-width: 1200px\n      # margin-width: 100px\n      gutter-width: 1.5rem\n\nreference-location: margin\n---\n\n\n\n\nWelcome to the eighth course! You will learn more about `for-loop` and `data visualization`:\n\n::: callout-note\n# Learning goals\n\n1.  requirements of merging *dataframes*\n2.  *save* or *show* the result of *for loop*\n3.  `ggplot()`\n:::\n\n::: callout-warning\n## Discussion\n\n1.  What is the component for-loop? How to check if it works for each element?\n2.  what are `long` and `wide`? when to use what?\n:::\n\n## Student's data\n\npractice with files from `data/student`.\n\n### How to save the column names of all files in a directory to a list using for loop?\n\n::: callout-important\n# For loop concept\n\n![](forloop1.png)\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath <- \"./data/student/\"\nfilenames <- list.files(path,pattern=\".xlsx\")\n#create empty list\ndf <- vector(mode=\"list\",length=length(filenames))\n\nfor(i in 1:length(filenames)){\n  fullpath <- paste0(path,filenames[i])\n  df[[i]] <- xlsx::read.xlsx(fullpath,\n                             sheetIndex = 1) %>% \n    names()\n}\n\ndf \n```\n:::\n\n:::\n\n### How to name list elements based on student's name ?\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n$clement\n[1] \"Var\"          \"Plot_Id\"      \"Spikes\"       \"flower\"       \"kernal.full\" \n[6] \"Kernal.half\"  \"kernal.small\"\n\n$hanwenhsu\n[1] \"var\"          \"plot_id\"      \"spike\"        \"flower\"       \"kernel.full\" \n[6] \"kernel.half\"  \"kernel.small\"\n\n$shawon\n[1] \"var\"         \"plot.id\"     \"spike\"       \"flower\"      \"kernel.full\"\n[6] \"kernel.half\" \"NA.\"        \n```\n\n\n:::\n:::\n\n\n::: {.callout-tip collapse=\"true\"}\n# click for answer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudent_name <-   purrr::map_chr(filenames,  ~{\n  .x %>% strsplit(\"_\") %>% unlist() %>% \n    .[4] %>% sub(\".xlsx\",\"\",.)\n}) \nnames(df) <-student_name\ndf\n```\n:::\n\n:::\n\n### How to combine all the dataframe by row?\n\nIf you know the column names are different, can you still combine them?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf<- map_dfr(list.files(\"./data/student\"),~{\n  \n  file<- xlsx::read.xlsx(paste0(\"./data/student/\",.x),sheetIndex = 1)\n})\ndf %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 0\nColumns: 0\n```\n\n\n:::\n:::\n\n\nHere are possible steps:\n\n::: {.callout-note appearance=\"simple\"}\n-   observe the patterns of column names, how to unify the column names?\n-   replace \"kernal\" with \"kernel\"\n-   replace \"spikes\" with \"spike\"\n-   replace \"plot.id\" with \"plot_id\"\n-   how to add the student's name as a column? where should you put it in the for-loop body?\n-   how to fill the missing cultivar and plot_id?\n-   remove \"na.\" column check your loop-body with the first element in your range.\n:::\n\n::: {.callout-tip collapse=\"true\"}\n# click for answer\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 57\nColumns: 8\n$ var          <chr> \"Capone\", \"Capone\", \"Capone\", \"Capone\", \"Capone\", \"Capone…\n$ plot_id      <dbl> 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 15…\n$ spike        <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17…\n$ flower       <dbl> 1, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, …\n$ kernel.full  <dbl> 0, 2, 2, 2, 3, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 1, …\n$ kernel.half  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ kernel.small <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ student      <chr> \"clement\", \"clement\", \"clement\", \"clement\", \"clement\", \"c…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(magrittr)\ndf<- map_dfr(list.files(\"./data/student\"),~{\n  \n  student_name <-  .x %>% strsplit(\"_\") %>% unlist() %>% \n    .[4] %>% sub(\".xlsx\",\"\",.)\n  \n  file<- xlsx::read.xlsx(paste0(\"./data/student/\",.x),sheetIndex = 1) %>%  \n    `colnames<-`(stringr::str_to_lower(names(.)))%>% \n    `colnames<-`(gsub(\"kernal\",\"kernel\",names(.))) %>% \n    `colnames<-`(gsub(\"spikes\",\"spike\",names(.)))%>%\n    `colnames<-`(gsub(\"plot.id\",\"plot_id\",names(.))) %>% \n    mutate(student=student_name)\n}) \ndf %<>% mutate(var=\"Capone\",plot_id=159) %>% \n  .[!grepl(\"na.\",names(.))]\ndf %>% glimpse()\n```\n:::\n\n\nThis answer is written in `map_()` series, could you rewrite in for loop?\n:::\n\n### How to visualize the result?\n\nPractice to make a draft, what will be the `x` and `y`, what will be the `color`?\n\nIs there difference between geom_line() and [geom_path()](https://ggplot2.tidyverse.org/reference/geom_path.html)?\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![Line Plot 1](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![Line Plot 2](index_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\n::: {.callout-tip collapse=\"true\"}\n# click for answer\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# line plot 1\ndf %>% \n  group_by(student,spike) %>% \n  ggplot(aes(flower,spike,color=student))+\n  geom_line(alpha=.5)+\n  theme(legend.position = \"bottom\")\n# line plot 2\ndf %>% \n  group_by(student,spike) %>% \n  ggplot(aes(flower,spike,color=student))+\n  geom_point()+\n  geom_path(alpha=.5)+\n  theme(legend.position = \"bottom\")\n```\n:::\n\n:::\n\n## recommendation\n\n[Advanced R: control flow](https://adv-r.hadley.nz/control-flow.html)\n",
    "supporting": [
      "index_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}