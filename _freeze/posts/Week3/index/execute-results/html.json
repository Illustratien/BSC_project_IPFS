{
  "hash": "a0c25dbdbb75b6d50c0f99fd380db855",
  "result": {
    "markdown": "---\ntitle: \"Week3: dataframe and ggplot2\"\nauthor: \"Tien-Cheng\"\ncategories: [R-basic]\ntoc-location: right\nnumber-sections: true\nwebsite: \n  sidebar:\n    search: true\nformat:\n  html: \n    # code-fold: true\n    html-math-method: katex\nreference-location: margin\n---\n\n\n\n\nWelcome to the third course! You will learn `ggplot` and `dataframe` wrangling:\n\n::: callout-note\n# Learning goals\n\n1.  data frame wrangling with `dplyr`\n2.  ggplot2\n:::\n\n[Review game Kahoot!](https://kahoot.it/)\n\n### practice dataframe with real data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(time=as.Date(\"2023-04-16\",format=\"%Y-%m-%d\")+seq(1,3,1),\n                 temp=c(20,15,13), \n                 thermal_time=cumsum(c(20,15,13)))\ndf %>% dplyr::glimpse() \nnames(df)\n# extract column from dataframe\ndf$thermal_time\ndf[,3]\ndf[,'thermal_time']\ndf[['thermal_time']]\n\n# not work\ndf[thermal_time]\n# different error message\n#!! name space conflict\ndf[time]\ntime\n\n# summarize dataframe\nlapply(df, range)\n# turn as data frame\nlapply(df, range) %>% data.frame()\n\nsummary(df)\n```\n:::\n\n\n::: callout-note\nPractice with large data set `ear_summarized.csv` in folder `data`.\n\n0.  read the file with relative path using function `read.csv()`.\n1.  find the row and column number of data frame by `nrown()` and `ncol()`\n2.  check the range of each column using `lapply()`, how many unique days exist in column `date`? check `unique()`\n3.  compare the result of `glimpse()` and `str()`\n4.  extract column `weight` using `[]`,`[[]]`and `$` [^1]\n5.  what is the function of `head()` and `tail()`?\n6.  how to extract the first three row using `[]`?\n:::\n\n[^1]: You can subset `dataframe` by indexing \\[`row`,`column`\\] `dataframe`\\[,`column`\\] select the whole role for selected columnn `dataframe`\\[`row`,\\] select the whole column of selected rows\n\n## dplyr\n\n### Subset row(s)\n\n`dplyr::filter()`: extract row where the condition matched. [^2]\n\n[^2]: `r_package::function_name` specify the function name by package name.`::` has similar meaning like \"from\". It is useful to avoid name space conflict when same function name is used by multiple library that you are using.\n\ne.g., extract `temp` where `time` is `2023-04-17` in `df`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# df$time %>% str()\ndf %>% dplyr::filter(time=='2023-04-17') %>% .$temp\ndf %>% dplyr::filter(time==as.Date('2023-04-17')) %>% .$temp\n```\n:::\n\n\n### Add column(s)\n\n`dplyr::mutate()`: add one or multiple columns to dataframe.\n\ne.g., add column`Year` to `df`, its value is `'2023'`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# result is not save\ndf %>% dplyr::mutate(Year=\"2023\") \ndf\n# result is saved\ndf$Year <- \"2023\"\ndf[['Year']] <- \"2023\"\ndf\n```\n:::\n\n\n::: callout-note\nHow to save result using `%>%`? Check example with `?mutate`.\n:::\n\n### Combine dataframes by column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(time=as.Date(\"2023-04-16\",format=\"%Y-%m-%d\")+seq(1,3,1),\n                 temp=c(20,15,13), \n                 thermal_time=cumsum(c(20,15,13)))\n# with same length dataframe\near_df <- data.frame(time=as.Date(\"2023-04-16\",format=\"%Y-%m-%d\")+seq(1,3,1),\n                     ear_weight=c(20,40,50))\nmerge(df,ear_df,by=\"time\")\ndplyr::left_join(df,ear_df,by=\"time\")\n# combind with vector of same length \ncbind(df, ear_weight=c(20,40,50))\ndf$ear_weight <- c(20,40)\n\n# with differnt length \nshort_ear_df <- data.frame(time=as.Date(\"2023-04-16\",format=\"%Y-%m-%d\")+seq(1,2,1),\n                           ear_weight=c(20,40))\nmerge(df,short_ear_df,by=\"time\")\ndplyr::left_join(df,short_ear_df,by=\"time\")\n\n# combind with vector of different length \ncbind(df, ear_weight=c(20,40))\ndf$ear_weight <- c(20,40)\n```\n:::\n\n\n::: callout-note\nCheck description of `merge` and `left_join`, how are they different from each other? What happen if you remove the argument `by`?\n:::\n\n## GGplot2\n\n### ggplot grammar: layer-wise commands\n\n[![layers of ggplot: click picture for original source](Rpubs.png)](https://api.rpubs.com/NemiVoraR/511391)\n\n![symbol, aes & ...](GGplot.png)\n\nTop layer `ggplot()`and sub-layers `sublayer commands` [^3], they are separated by `+`.\n\n[^3]: see [function reference](https://ggplot2.tidyverse.org/reference/) for more!\n\nWithin each layer, there may be an aesthetic function `aes()` to set aesthetic setting like `x`,`y` and `color`,`fill` or `shape`. Function `ggplot()` will not generate any graph but used for setting common aesthetic setting across the sub-layer. Plot type are specify in sub-layer with prefix `geom_xx`.\n\n::: callout-important\n## order matters!\n\nIf there are conflicts between the sub-layer commands, the latter will overwrite the previous one!\n:::\n\n### Requirements of scientific plot.\n\n1.  axis title: specify with unit if there is any using `xlab()` or `ylab()`.\n\n2.  legend title: full name instead of default abbreviation using `guides()`.\n\n3.  other important rules: [^4].\n\n[^4]: [Ten simple rules for better figures](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1003833) [How to Make Good Graphs and Figures for Scientific Papers](https://www.simplifiedsciencepublishing.com/resources/how-to-make-good-graphs-and-figures-for-scientific-papers)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Watch out the names!\nlibrary(ggplot)\nlibrary(ggplot2)\n```\n:::\n\n\n::: callout-note\ngo to [HU-box](https://box.hu-berlin.de/d/fc7db144021a4a35a086/) download `ear_summarized.csv`and put it in folder data. read this file using `read.csv` with relative path and named it as `data`\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>% \n  ggplot(aes(x=date,y=weight,color=var))+\n  geom_point()+\n  geom_line(aes(group=group))+ # link the point by group.\n  xlab(\"date of harvest\")+ #x axis title\n  ylab(\"ear weight(g)\")+   #y axis title\n  guides(color=guide_legend(title=\"Cultivar\")) #change legend title \n```\n\n::: {.cell-output-display}\n![Growth of ear weight over time.](index_files/figure-html/fig-growth-1.png){#fig-growth width=1152}\n:::\n:::\n\n\n::: {.callout-tip collapse=\"true\"}\n## challenge : use `theme_xx()` function series to change background of the plot. Click for example.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![dark theme example.](index_files/figure-html/fig-growthdark-1.png){#fig-growthdark width=1152}\n:::\n:::\n\n:::\n\n### facet: organized subplot by column\n\nThere are two commonly used function`facet_grid` and `facet_wrap`. In side each function, subplots are arranged in the manner of `(row ~ column)`. There could be multiple column names put in the row or column position.\n\n::: callout-note\ngo to [HU-box](https://box.hu-berlin.de/d/fc7db144021a4a35a086/) download `phenology_short.csv`and put it in folder data. read this file using `read.csv` with relative path and named it as `phenology`\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nphenology %>% \nggplot(.,aes(x=var,y=value))+\n  geom_boxplot()+\n  facet_grid(Year~stage)\n```\n\n::: {.cell-output-display}\n![uggly example.](index_files/figure-html/fig-uggly-1.png){#fig-uggly width=1152}\n:::\n:::\n\n\n::: {.callout-tip collapse=\"true\"}\n### Make this graph more beautiful!\n\nHow to make each point show in box plot? (search for `scatter points in boxplot ggplot2`)\n\nHow does `color` and `fill` differs? Can you color it by `var`?\n\nCould you apply another color scale using `viridis` package?\n\nHow to remove the background of the facet title with `theme()`? what does `element_blank()` do?\n\nFollow up question, if you also apply `theme_test()` to it, it should be before or after `theme()`?\n\nHow to change title size? how does it related to `element_text()`\n\nCould you change the axis title display angle as 90 degree?\n\nHow do you add title?\n\n\n::: {.cell}\n::: {.cell-output-display}\n![beautiful example.](index_files/figure-html/fig-beautiful-1.png){#fig-beautiful width=1152}\n:::\n:::\n\n:::\n\n## Recommendations\n\n### online tutorials:\n\n[ggplot datacamp](https://www.datacamp.com/cheat-sheet/ggplot2-cheat-sheet) [ggplot 2](https://ggplot2.tidyverse.org) [ggplot gallery](https://r-graph-gallery.com)\n\n### online books:\n\n[ggplot cheatsheet](https://www.maths.usyd.edu.au/u/UG/SM/STAT3022/r/current/Misc/data-visualization-2.1.pdf) [Data visualization with R](https://rkabacoff.github.io/datavis/) [R for Data Science: Chapter3 Visualization](https://r4ds.had.co.nz/data-visualisation.html)\n\n::: {#fig-stewiseggplot}\n[![](ggplot_basics_top.png)](https://epirhandbook.com/en/ggplot-basics.html)\n\n[original article](https://epirhandbook.com/en/ggplot-basics.html).\n:::\n\n## Feedback this week\n\n[Anonymous feedback](https://docs.google.com/document/d/1Eql4MjJEj0qjiVylCTv8WgR58qxsX8DKst_Kkwy2gcU/edit?usp=sharing)\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}