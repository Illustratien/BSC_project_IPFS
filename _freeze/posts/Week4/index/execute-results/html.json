{
  "hash": "f112d635d42df205f52a49942fbca66a",
  "result": {
    "markdown": "---\ntitle: \"Week4: column and row operations in dataframe\"\nauthor: \"Tien-Cheng\"\ncategories: [R-basic]\n\ntoc-location: right\nnumber-sections: true\nwebsite: \n  sidebar:\n    search: true\nformat:\n  html: \n    grid:\n      sidebar-width: 300px\n      body-width: 900px\n      margin-width: 300px\n      gutter-width: 1.5rem\n\nreference-location: margin\n---\n\n\n\n\nWelcome to the fourth course! You will learn `dataframe` wrangling:\n\n::: callout-note\n# Learning goals\n\n1.  data frame wrangling with `dplyr` and `tidyr`\n:::\n\n## more mutate examples\n\nCreate a dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- expand.grid(x=letters[1:4],\n                  y=1:2)\n```\n:::\n\n\n### combine columns\n\n`paste`, `interaction` , `unite` Compare the results\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf%>% mutate(paste(x,y))\ndf%>% mutate(z=paste(x,y))\ndf%>% mutate(z=paste(x,y,sep = \"-\"))\ndf %>% tidyr::unite(data = .,col = \"z\",c(x,y))\ndf <- df %>% mutate(z=interaction(x,y))\n```\n:::\n\n\n### add columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add identifier based on row numbers\ndf %>% mutate(id=1:n())\ndf %>% mutate(id=1:nrow(.))\n# row names\nrownames(df)\nrownames(df) <- LETTERS[1:nrow(df)]\nrownames(df)\n```\n:::\n\n\n#### practice\n\nsubset the row where (x equals to \"a\", y equals to 1) or (x equals to \"c\", y equals to 2)\n\n1.  How many ways to achieve this? you can use `dplyr::filter` or `[]`.\n2.  Observe the row names, are they the same before and after subseting?\n\n::: {.callout-warning collapse=\"true\"}\n# answer\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% filter(z%in%c(\"a.1\",\"c.2\"))\ndf %>% filter((x==\"a\"&y==1)|(x==\"c\"&y==2))\ndf %>% .[rownames(.)%in%c(\"A\",\"G\"),]\ndf %>% with(.,.[(x==\"a\"&y==1)|(x==\"c\"&y==2),])\n```\n:::\n\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}